[proc,npc_findcount](coord $coord, npc $npc, int $distance, int $checkvis)(int)
npc_findallany($coord, $distance, $checkvis);
def_int $count = 0;
while (npc_findnext = true) {
    if (npc_type = $npc) {
        $count = add($count, 1);
    }
}
return ($count);

[proc,.npc_findcount](coord $coord, npc $npc, int $distance, int $checkvis)(int)
.npc_findallany($coord, $distance, $checkvis);
def_int $count = 0;
while (.npc_findnext = true) {
    if (.npc_type = $npc) {
        $count = add($count, 1);
    }
}
return ($count);

// - deletes all of one npc type within a certain number of tiles from a coord
[proc,npc_del_within_distance](coord $coord, npc $npc, int $distance)
def_int $radius = add(1, divide($distance, 8));

def_int $x = coordx($coord);
def_int $z = coordz($coord);

def_int $centerX = divide($x, pow(2, 3));
def_int $centerZ = divide($z, pow(2, 3));

def_int $maxX = add($centerX, $radius);
def_int $minX = sub($centerX, $radius);

while ($maxX >= $minX) {
    def_int $zoneX = multiply($maxX, pow(2, 3));
    def_int $maxZ = add($centerZ, $radius);
    def_int $minZ = sub($centerZ, $radius);
    while ($maxZ >= $minZ) {
        def_int $zoneZ = multiply($maxZ, pow(2, 3));

        def_int $dx = sub($zoneX, $x);
        def_int $dz = sub($zoneZ, $z);
        def_coord $zoneCoord = movecoord($coord, $dx, 0, $dz);
        // mes("Zone: <tostring(divide(coordx($zoneCoord), pow(2, 3)))>_<tostring(divide(coordz($zoneCoord), pow(2, 3)))>");
        npc_findallzone($zoneCoord);
        while (npc_findnext = true) {
            if (npc_type = $npc & distance($coord, npc_coord) <= $distance) {
                npc_del;
            }
        }
        $maxZ = sub($maxZ, 1);
    }
    $maxX = sub($maxX, 1);
}

// - deletes all of one npc type within a certain number of tiles from a coord
// - Doesnt delete if the npc is in combat.
// - Used for mage arena
[proc,npc_del_within_distance2](coord $coord, npc $npc, int $distance)
def_int $radius = add(1, divide($distance, 8));

def_int $x = coordx($coord);
def_int $z = coordz($coord);

def_int $centerX = divide($x, pow(2, 3));
def_int $centerZ = divide($z, pow(2, 3));

def_int $maxX = add($centerX, $radius);
def_int $minX = sub($centerX, $radius);

while ($maxX >= $minX) {
    def_int $zoneX = multiply($maxX, pow(2, 3));
    def_int $maxZ = add($centerZ, $radius);
    def_int $minZ = sub($centerZ, $radius);
    while ($maxZ >= $minZ) {
        def_int $zoneZ = multiply($maxZ, pow(2, 3));

        def_int $dx = sub($zoneX, $x);
        def_int $dz = sub($zoneZ, $z);
        def_coord $zoneCoord = movecoord($coord, $dx, 0, $dz);
        // mes("Zone: <tostring(divide(coordx($zoneCoord), pow(2, 3)))>_<tostring(divide(coordz($zoneCoord), pow(2, 3)))>");
        npc_findallzone($zoneCoord);
        while (npc_findnext = true) {
            // only delete if the npc isnt in combat
            if (npc_type = $npc & distance($coord, npc_coord) <= $distance & add(%npc_lastcombat, 8) <= map_clock) {
                npc_del;
            }
        }
        $maxZ = sub($maxZ, 1);
    }
    $maxX = sub($maxX, 1);
}