// Varp 65 Values
// 1 After the player says "I could go and take a look for you if you like" and before Almera responds "Would you?..."
// 2 After the player says "Maybe I could help" and before Hudon says "I'm fine alone."
// 3 Upon opening and reading the Book on baxtorian.
// 4 Immediately after entering Glarial's tomb at the bottom of the ladder.
// 5 Upon first entering the waterfall dungeon which requires Glarial's amulet equipped.
// 6 Upon first entering the puzzle room.
// 8 Upon placing the amulet on the statue.
// 10 After pouring the ashes into the chalice and remove the treasure. Quest complete.

// Coords
// Unwrecked raft - 2510 3494
// Wrecked Raft - 2512 3481
// Golrie - 2515 9575

// Animations
// 765 swimming arms up
// 774 - rope throw, possibly called: human_throwrope
// 776 - in water pulling rope
// 777 - holding rope in water stationary

// Spotanim, possible one of th enames: rope_piece
// 67 rope moving through air

// Locs
// 1996 - rock no rope
// 1997 - rock with rope
// 1998 - rope that appears as you're swimming

// Glarial's Memorial
[oploc1,loc_1992]
mes("The grave is covered in elven script.");
p_delay(2);
mes("Some of the writing is in common tongue, it reads:");
p_delay(2);
mes("Here lies Glarial, wife of Baxtorian,");
p_delay(2);
mes("true friend of nature in life and death.");
p_delay(2);
mes("May she now rest knowing");
p_delay(2);
mes("only visitors with peaceful intent can enter.");

[proc,waterfall_can_enter_glarials_tomb]()(boolean)
//if ((inv_totalcat(inv, category_62) > 0 | inv_totalcat(worn, category_62) > 0) // Arrows
//    | (inv_totalcat(inv, category_61) > 0 | inv_totalcat(worn, category_61) > 0) // 2H swords
//    | (inv_totalcat(inv, category_25) > 0 | inv_totalcat(worn, category_25) > 0) // swords
//    | (inv_totalcat(inv, category_21) > 0 | inv_totalcat(worn, category_21) > 0) // longswords
//    | (inv_totalcat(inv, category_39) > 0 | inv_totalcat(worn, category_39) > 0) // maces
//    | (inv_totalcat(inv, category_21) > 0 | inv_totalcat(worn, category_21) > 0) // scimitars
//    | (inv_totalcat(inv, category_26) > 0 | inv_totalcat(worn, category_26) > 0) // warhammers
//    | (inv_totalcat(inv, category_25) > 0 | inv_totalcat(worn, category_25) > 0) // daggers
//    | (inv_totalcat(inv, category_67) > 0 | inv_totalcat(worn, category_67) > 0) // pickaxes
//    | (inv_totalcat(inv, category_35) > 0 | inv_totalcat(worn, category_35) > 0) // axes
//    | (inv_totalcat(inv, category_64) > 0 | inv_totalcat(worn, category_64) > 0) // bows
//    | (inv_totalcat(inv, category_37) > 0 | inv_totalcat(worn, category_37) > 0) // crossbows
//    | (inv_totalcat(inv, category_530) > 0 | inv_totalcat(worn, category_530) > 0) // bolts
//    | (inv_totalcat(inv, category_1193) > 0 | inv_totalcat(worn, category_1193) > 0) // scythe
//    | (inv_totalcat(inv, category_969) > 0 | inv_totalcat(worn, category_969) > 0) // darts
//    | (inv_totalcat(inv, category_24) > 0 | inv_totalcat(worn, category_24) > 0) // thrown axes/knives
//    | (inv_totalcat(inv, category_601) > 0 | inv_totalcat(worn, category_601) > 0) // javelins
//    | (inv_totalcat(inv, category_1) > 0 | inv_totalcat(worn, category_1) > 0) // staves
//    | (inv_totalcat(inv, category_7) > 0 | inv_totalcat(worn, category_7) > 0) // platebodies/chainbodies
//    | (inv_totalcat(inv, category_8) > 0 | inv_totalcat(worn, category_8) > 0) // platelegs
//    | (inv_totalcat(inv, category_18) > 0 | inv_totalcat(worn, category_18) > 0) // shields
//    | (inv_totalcat(inv, category_2) > 0 | inv_totalcat(worn, category_2) > 0) // helmets
//    | (inv_totalcat(inv, category_656) > 0 | inv_totalcat(worn, category_656) > 0) // rings
//    | (inv_totalcat(inv, category_557) > 0 | inv_totalcat(worn, category_557) > 0) // amulets
//    | (inv_totalcat(inv, category_0) > 0 | inv_totalcat(worn, category_0) > 0) // gloves
//    | (inv_totalcat(inv, category_1183) > 0 | inv_totalcat(worn, category_1183) > 0) // god capes
//    | (inv_totalcat(inv, category_149) > 0) // runes
//) {
//    return(false);
//}
return(true);

[oplocu,loc_1992]
if (last_item ! obj_294) {
    @nothing_interesting_happens;
}
// TODO: Check inv_totalcat for each category we need
// Can't bring in jewelry, armour, runes, arrows, bows, or any type of logs?
mes("You place the pebble in the gravestone's small indent.");
mes("It fits perfectly.");
p_delay(2);
if (~waterfall_can_enter_glarials_tomb() = false) {
    mes("But nothing happens.");
} else {
    mes("You hear a loud creak.");
    p_delay(2);
    mes("The stone slab slides back revealing a ladder down.");
    p_delay(2);
    p_teleport(0_39_153_58_52);
    mes("You climb down to an undergound passage.");
}


// Glarial's grave
[oploc1,loc_1993]
if (inv_total(inv, obj_296) > 0) {
    mes("It's empty.");
} else {
    mes("You search the coffin");
    p_delay(2);
    mes("Inside you find an urn full of ashes.");
    p_delay(2);
    mes("You take the urn and close the coffin.");
    inv_add(inv, obj_296, 1);
}

// Chest with amulet closed
[oploc1,loc_1994]
p_arrivedelay;
anim(human_openchest, 0);
sound_synth(chest_open, 0, 0);
p_delay(0);
loc_del(300);
loc_add(loc_coord, loc_1995, loc_angle, loc_shape, 300);

// search chest with amulet opened
[oploc1,loc_1995]
if (inv_total(inv, obj_295) > 0) {
    mes("You search the chest but find nothing.");
} else {
    mes("You search the chest and find a small amulet.");
    inv_add(inv, obj_295, 1);
}

// close chest with amulet opened
[oploc2,loc_1995]
p_arrivedelay;
anim(human_openchest, 0);
sound_synth(chest_open, 0, 0);
p_delay(0);
loc_del(300);
loc_add(loc_coord, loc_1994, loc_angle, loc_shape, 300);

// Swim to rock
[aploc1,loc_1996]
// TODO: The movement and such...
mes("It looks like a long distance, but you swim out into the water.");
p_delay(2);
mes("The current is too strong, you feel yourself being pulled under");
p_delay(2);
p_teleport(0_39_53_31_21);
mes("You are washed downstream but feel lucky to be alive.");

// Rope on Rock
[aplocu,loc_1996]
anim(seq_774, 0);
spotanim_map(spotanim_67, 0_39_54_16_18, 0, 20);
p_delay(1);
loc_add(0_39_54_16_19, loc_1998, loc_angle, loc_shape, 1);
loc_add(0_39_54_16_18, loc_1998, loc_angle, loc_shape, 2);
loc_add(0_39_54_16_17, loc_1998, loc_angle, loc_shape, 3);
loc_add(0_39_54_16_16, loc_1998, loc_angle, loc_shape, 4);
loc_add(0_39_54_16_15, loc_1998, loc_angle, loc_shape, 5);
loc_add(0_39_54_16_14, loc_1998, loc_angle, loc_shape, 6);
loc_add(0_39_54_16_13, loc_1998, loc_angle, loc_shape, 7);
loc_del(7);
loc_add(loc_coord, loc_1997, loc_angle, loc_shape, 7);
~agility_force_move(0, seq_776, movecoord(coord, 0, 0, -7));
~agility_force_move(0, seq_776, movecoord(coord, 1, 0, -1));
//~agility_exactmove(seq_776, 0, 3, 0_39_54_16_20, 0_39_54_17_12, 30, 256, ^exact_south, false);
p_delay(2);
p_teleport(0_39_54_16_20);

// waterfall_raft
[oploc1,loc_1987]
switch_int (%waterfall_progress) {
    case ^waterfall_not_started: ~mesbox("You're not sure if the raft is safe to use.|Best to leave it alone.");
    case default: @waterfall_raft;
}

[label,waterfall_raft]
mes("You board the small raft");
p_delay(2);
mes("and you push off down stream");
p_delay(2);
p_teleport(0_39_54_16_25);
mes("The raft is pulled down stream by strong currents.");
p_delay(2);
mes("You crash into a small land mound");
p_delay(2);
if (%waterfall_progress = ^waterfall_started) {
    // Forced Hudon Dialogue
    npc_findallzone(0_39_54_15_28);
    while (npc_findnext = true) {
        if (npc_type = npc_305) {
            ~chatplayer(neutral, "Hello son, are you okay? You need help?");
            ~chatnpc(happy, "It looks like you need the help.");
            ~chatplayer(neutral, "Your mum sent me to find you.");
            ~chatnpc(happy, "Don't play nice with me, I know you're looking for the treasure.");
            ~chatnpc(happy, "Just because I'm small doesn't mean I'm dumb! If I told you, you would take it all for yourself.");
            ~chatplayer(neutral, "Maybe I could help.");
            %waterfall_progress = ^waterfall_spoken_to_hudon;
            ~chatnpc(neutral, "I'm fine alone.");
            mes("Hudon is refusing to leave the waterfall.");
        }
    }
}

// waterfall_bookcase
[oploc1,loc_1989]
@waterfall_search_bookcase;

[label,waterfall_search_bookcase]
if (getqueue(waterfall_bookcase_result) > 0) {
    return;
}
mes("You search the books...");
strongqueue(waterfall_bookcase_result, 3);

[queue,waterfall_bookcase_result]
switch_int (%waterfall_progress) {
    case ^waterfall_not_started: mes("You find nothing of interest.");
    case default: @waterfall_add_book;
}

[label,waterfall_add_book]
if (inv_total(inv, obj_292) > 0) {
    mes("but find nothing of interest.");
} else {
    mes("You find a book named 'Book on Baxtorian'");
    inv_add(inv, obj_292, 1);
}

// waterfall_golrie_key_crate
[oploc1,loc_1990]
@waterfall_search_crate_golrie_key;

[label,waterfall_search_crate_golrie_key]
if (getqueue(waterfall_crate_golrie_key_result) > 0) {
    return;
}
mes("You search the crate...");
strongqueue(waterfall_crate_golrie_key_result, 2);

[queue,waterfall_crate_golrie_key_result]
switch_int (%waterfall_progress) {
    case ^waterfall_not_started: mes("You find nothing of interest.");
    case default: @waterfall_add_golrie_key;
}

[label,waterfall_add_golrie_key]
if (inv_total(inv, obj_293) > 0) {
    mes("but find nothing.");
} else {
    mes("and find a large key.");
    inv_add(inv, obj_293, 1);
}

// Waterfall Golrie Door
[oploc1,loc_1991]
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
if (inv_total(inv, obj_293) > 0 | $is_outside = false) {
    @waterfall_golrie_door;
} else {
    mes("The door is locked.");
    p_delay(2);
    mes("You need a key.");
}

[oplocu,loc_1991]
if (last_item = obj_293) {
    @waterfall_golrie_door;
}

[label,waterfall_golrie_door]
def_boolean $is_outside = ~check_axis(coord, loc_coord, loc_angle);
if ($is_outside = true) {
    mes("The key fits the gate.");
    p_delay(2);
    ~open_and_close_door(loc_1541, loc_coord, loc_angle, loc_shape, $is_outside, false);
    mes("You open the gate and walk through.");
} else {
    ~open_and_close_door(loc_1541, loc_coord, loc_angle, loc_shape, $is_outside, false);
}

[queue,waterfall_quest_complete]
inv_add(inv, diamond, 2);
inv_add(inv, mithril_seeds, 40);
givexp(attack, 137500);
givexp(strength, 137500);
~send_quest_complete(quest_journal:waterfall, diamond, 250, 1, "You have completed the Waterfall Quest!");

[oploc2,loc_823]
if_openchat(objbox2);